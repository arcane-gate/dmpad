{"version":3,"sources":["Editor/blocks/ActionItem.js","Editor/blocks/StatBlock.js","Editor/blocks/DDBImport.js","Editor/blocks/DiceNotation.js","Editor/CommandList.js","Editor/slashCommands.js","Editor/ExtensionManager.js","Editor/index.js","ImportModal.js","logo.svg","App.js","index.js"],"names":["Actionitem","className","contentEditable","node","Node","create","name","group","content","parseHTML","tag","renderHTML","HTMLAttributes","mergeAttributes","addNodeView","ReactNodeViewRenderer","slash","title","element","command","editor","range","chain","focus","deleteRange","setNode","run","StatBlock","props","getPos","defaultOptions","defining","this","options","insertContentAt","type","attrs","allow","can","window","event","CustomEvent","detail","document","dispatchEvent","roll","Roll","diceRegex","diceRegexExact","DiceNotation","Mark","priority","inclusive","rollOnClick","createOnPaste","createOnType","addPasteRules","markPasteRule","addProseMirrorPlugins","plugins","diceDecorations","doc","decorations","result","descendants","pos","isText","text","matchAll","match","groups","dice","diceIndex","index","indexOf","diceLen","length","push","from","to","findDiceNotations","forEach","Decoration","inline","class","DecorationSet","dicePlugin","Plugin","state","init","_","apply","tr","old","docChanged","getState","key","PluginKey","handleClick","view","rollText","target","textContent","trim","closest","getAttributes","ctrlKey","alert","handlePaste","slice","selection","empty","commands","setMark","CommandList","selectedIndex","oldProps","items","setState","upHandler","downHandler","enterHandler","selectItem","item","map","onClick","React","Component","baseSlashCommands","level","ExtensionManager","extensions","SlashCommands","Mention","configure","suggestion","char","startOfLine","query","filter","extension","toLowerCase","startsWith","render","reactRenderer","popup","onStart","ReactRenderer","tippy","getReferenceClientRect","clientRect","appendTo","body","showOnCreate","interactive","trigger","placement","onUpdate","updateProps","setProps","onKeyDown","ref","onExit","destroy","configureSlashCommand","useStarterDocState","createPersistedState","defaultExtensions","Highlight","Typography","ActionItem","DDBImport","defaultState","marks","Editor","currentContent","setCurrentContent","useEditor","editorProps","attributes","json","getJSON","MONSTER_REGEX","modalRoot","getElementById","Modal","children","createElement","classList","add","useEffect","appendChild","removeChild","ReactDOM","createPortal","processingExtensions","ImportModal","useState","importUrl","setImportUrl","showing","setShowing","rangeRef","useRef","importRef","onCreate","e","current","addEventListener","removeEventListener","onChange","value","placeholder","url","test","Error","fetch","method","headers","JSON","stringify","cobalt","searchTerm","exactMatch","parseDDBLinkToProxy","then","r","data","imported","generatedActions","generateJSON","actionsDescription","generatedLegendary","specialTraitsDescription","legendaryActionsDescription","Boolean","processDataToBlock","App","src","logo","alt","href","rootElement"],"mappings":"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","file":"static/js/main.1fee1226.chunk.js","sourcesContent":["import { Node, mergeAttributes } from \"@tiptap/core\";\r\nimport {\r\n  ReactNodeViewRenderer,\r\n  NodeViewWrapper,\r\n  NodeViewContent\r\n} from \"@tiptap/react\";\r\nimport React from \"react\";\r\nimport { Lightbulb } from \"phosphor-react\";\r\n\r\nimport \"./ActionItem.scss\";\r\n\r\nconst Actionitem = () => {\r\n  return (\r\n    <NodeViewWrapper className=\"action-item\">\r\n      <span className=\"label\" contentEditable={false}>\r\n        <Lightbulb /> Action Item\r\n      </span>\r\n\r\n      <NodeViewContent className=\"content\" />\r\n    </NodeViewWrapper>\r\n  );\r\n};\r\n\r\nexport default {\r\n  node: Node.create({\r\n    name: \"actionItem\",\r\n    group: \"block\",\r\n    content: \"inline*\",\r\n    parseHTML() {\r\n      return [\r\n        {\r\n          tag: \"action-item\"\r\n        }\r\n      ];\r\n    },\r\n\r\n    renderHTML({ HTMLAttributes }) {\r\n      return [\"action-item\", mergeAttributes(HTMLAttributes), 0];\r\n    },\r\n  \r\n    addNodeView() {\r\n      return ReactNodeViewRenderer(Actionitem);\r\n    }\r\n  }),\r\n  slash: {\r\n    title: \"action item\",\r\n    element: (\r\n      <span>\r\n        <Lightbulb /> Action Item\r\n      </span>\r\n    ),\r\n    command: ({ editor, range }) => {\r\n      editor.chain().focus().deleteRange(range).setNode(\"actionItem\", {}).run();\r\n    }\r\n  }\r\n}\r\n","import { Node, mergeAttributes } from '@tiptap/core';\r\nimport {\r\n  ReactNodeViewRenderer,\r\n  NodeViewWrapper,\r\n  NodeViewContent,\r\n} from '@tiptap/react';\r\nimport React from 'react';\r\nimport { Sword } from 'phosphor-react';\r\n\r\nimport './StatBlock.scss';\r\n\r\nconst MONSTER_REGEX = /https:\\/\\/(www.)?dndbeyond.com\\/monsters\\/([a-zA-Z0-9-]+)/;\r\nconst PROXY_URL = `http://localhost:3000/proxy`;\r\n\r\n\r\nconst StatBlock = (props) => {\r\n  const { editor, getPos } = props;\r\n  return (\r\n    <NodeViewWrapper className=\"stat-block\">\r\n      <span className=\"label\" contentEditable={false}>\r\n        <Sword /> Stat Block\r\n      </span>\r\n      <NodeViewContent className=\"content\" />\r\n    </NodeViewWrapper>\r\n  );\r\n};\r\n\r\nexport default {\r\n  node: Node.create({\r\n    name: 'statBlock',\r\n    group: 'block',\r\n    content: 'block*',\r\n    defaultOptions: {\r\n      HTMLAttributes: {},\r\n    },\r\n    defining: true,\r\n    parseHTML() {\r\n      return [\r\n        {\r\n          tag: 'stat-block',\r\n        },\r\n      ];\r\n    },\r\n\r\n    renderHTML({ HTMLAttributes }) {\r\n      return [\r\n        'stat-block',\r\n        mergeAttributes(this.options.HTMLAttributes, HTMLAttributes),\r\n        0,\r\n      ];\r\n    },\r\n\r\n    addNodeView() {\r\n      return ReactNodeViewRenderer(StatBlock);\r\n    },\r\n  }),\r\n  slash: {\r\n    title: 'stat block',\r\n    element: (\r\n      <span>\r\n        <Sword /> Stat Block\r\n      </span>\r\n    ),\r\n    command: ({ editor, range, props }) => {\r\n      editor\r\n        .chain()\r\n        .focus()\r\n        .insertContentAt(range, [\r\n          {\r\n            type: 'statBlock',\r\n            attrs: props,\r\n            content: [{ type: 'paragraph' }],\r\n          },\r\n        ])\r\n        .run();\r\n    },\r\n    allow: ({ editor, range }) => {\r\n      return editor.can().insertContentAt(range, { type: 'statBlock' });\r\n    },\r\n  },\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Sword } from 'phosphor-react';\n\n\nexport default {\n  slash: {\n    title: 'import from ddb',\n    element: (\n      <span>\n        <Sword /> Import from DDB\n      </span>\n    ),\n    command: (props) => {\n      props.editor.chain().focus();\n      window.editor = props.editor;\n      const event = new CustomEvent('ddbImport', { detail: props });\n      document.dispatchEvent(event);\n      \n    },\n    allow: ({ editor, range }) => {\n      return editor.can().insertContentAt(range, { type: 'statBlock' });\n    },\n  },\n};\n","import {\n  Command,\n  Mark,\n  markPasteRule,\n  markInputRule,\n  mergeAttributes,\n} from '@tiptap/core';\nimport { Plugin, PluginKey } from 'prosemirror-state';\nimport { Decoration, DecorationSet } from 'prosemirror-view';\nimport './DiceNotation.scss';\nimport Roll from 'roll';\n\nconst roll = new Roll();\n\n/**\n * A regex that matches any string that contains a dice notation\n */\nexport const diceRegex = /(?:^|\\s)(?<dice>(\\d+d\\d+\\+?)+)/gi;\n\n// export const diceInputRegex = /(?:^|\\s)((?:\\d+d\\d+\\+?)+)(?:\\s)/gim;\n\n/**\n * A regex that matches an dice notation\n */\nexport const diceRegexExact = /^(\\d+d\\d+\\+?)+$/gim;\n\nexport const DiceNotation = Mark.create({\n  name: 'dice-notation',\n\n  priority: 1000,\n\n  inclusive: false,\n\n  defaultOptions: {\n    rollOnClick: true,\n    createOnPaste: true,\n    createOnType: true,\n  },\n\n  parseHTML() {\n    return [{ tag: 'span.dice-notation' }];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\n      'span.dice-notation',\n      mergeAttributes(this.options.HTMLAttributes, HTMLAttributes),\n      0,\n    ];\n  },\n\n  addPasteRules() {\n    return [markPasteRule(diceRegex, this.type)];\n  },\n\n  // addInputRules() {\n  //   return [markInputRule(diceInputRegex, this.type)];\n  // },\n\n  addProseMirrorPlugins() {\n    const plugins = [];\n    const findDiceNotations = (doc) => {\n      const result = [];\n      doc.descendants((node, pos) => {\n        if (node.isText && node.text) {\n          for (const match of node.text.matchAll(diceRegex)) {\n            if (match.groups?.dice) {\n              const diceIndex =\n                (match?.index || 0) + match[0].indexOf(match.groups.dice);\n              const diceLen = match.groups.dice.length;\n              result.push({\n                from: pos + diceIndex,\n                to: pos + diceIndex + diceLen,\n              });\n            }\n          }\n        }\n      });\n      return result;\n    };\n\n    const diceDecorations = (doc: Node) => {\n      const decorations: any = [];\n      findDiceNotations(doc).forEach((dice) => {\n        decorations.push(\n          Decoration.inline(dice.from, dice.to, { class: 'dice-notation' })\n        );\n      });\n      return DecorationSet.create(doc, decorations);\n    };\n\n    const dicePlugin = new Plugin({\n      state: {\n        init(_, { doc }) {\n          return diceDecorations(doc);\n        },\n        apply(tr, old) {\n          return tr.docChanged ? diceDecorations(tr.doc) : old;\n        },\n      },\n      props: {\n        decorations(state) {\n          return this.getState(state);\n        },\n      },\n    });\n    plugins.push(dicePlugin);\n\n    if (this.options.rollOnClick) {\n      plugins.push(\n        new Plugin({\n          key: new PluginKey('handleClickDiceNotation'),\n          props: {\n            handleClick: (view, pos, event) => {\n              const rollText = event.target?.textContent.trim();\n              const attrs = this.editor.getAttributes('dice-notation')\n              const closest = event.target?.closest('.dice-notation')\n              if(!rollText || !closest) return false;\n              const { result } = roll.roll(rollText);\n\n              if(event.ctrlKey) {\n              } else {\n                alert(rollText + ' = ' + result);\n              }\n            },\n          },\n        })\n      );\n    }\n\n    if (this.options.createOnPaste) {\n      plugins.push(\n        new Plugin({\n          key: new PluginKey('handlePasteDiceNotation'),\n          props: {\n            handlePaste: (view, event, slice) => {\n              const { state } = view;\n              const { selection } = state;\n              const { empty } = selection;\n\n              if (empty) {\n                return false;\n              }\n\n              let textContent = '';\n\n              slice.content.forEach((node) => {\n                textContent += node.textContent;\n              });\n\n              if (!textContent || !textContent.match(diceRegexExact)) {\n                return false;\n              }\n\n              this.editor.commands.setMark(this.type);\n\n              return true;\n            },\n          },\n        })\n      );\n    }\n\n    return plugins;\n\n  },\n});\n\nexport default DiceNotation;\n","import React from \"react\";\r\nimport \"./CommandList.scss\";\r\n\r\nclass CommandList extends React.Component {\r\n  state = {\r\n    selectedIndex: 0\r\n  };\r\n\r\n  componentDidUpdate(oldProps) {\r\n    if (this.props.items !== oldProps.items) {\r\n      this.setState({\r\n        selectedIndex: 0\r\n      });\r\n    }\r\n  }\r\n\r\n  onKeyDown({ event }) {\r\n    if (event.key === \"ArrowUp\") {\r\n      this.upHandler();\r\n      return true;\r\n    }\r\n\r\n    if (event.key === \"ArrowDown\") {\r\n      this.downHandler();\r\n      return true;\r\n    }\r\n\r\n    if (event.key === \"Enter\") {\r\n      this.enterHandler();\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  upHandler() {\r\n    this.setState({\r\n      selectedIndex:\r\n        (this.state.selectedIndex + this.props.items.length - 1) %\r\n        this.props.items.length\r\n    });\r\n  }\r\n\r\n  downHandler() {\r\n    this.setState({\r\n      selectedIndex: (this.state.selectedIndex + 1) % this.props.items.length\r\n    });\r\n  }\r\n\r\n  enterHandler() {\r\n    this.selectItem(this.state.selectedIndex);\r\n  }\r\n\r\n  selectItem(index) {\r\n    const item = this.props.items[index];\r\n\r\n    if (item) {\r\n      this.props.command(item);\r\n    }\r\n  }\r\n  render() {\r\n    const { items } = this.props;\r\n    return (\r\n      <div className=\"items\">\r\n        {items.map((item, index) => {\r\n          return (\r\n            <button\r\n              className={`item ${\r\n                index === this.state.selectedIndex ? \"is-selected\" : \"\"\r\n              }`}\r\n              key={index}\r\n              onClick={() => this.selectItem(index)}\r\n            >\r\n              {item.element || item.title}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommandList;\r\n","import React from \"react\";\r\nimport {\r\n  NumberSquareOne,\r\n  NumberSquareTwo,\r\n  TextBolder,\r\n  TextItalic\r\n} from \"phosphor-react\";\r\n\r\nconst baseSlashCommands = [\r\n  {\r\n    title: \"header 1\",\r\n    element: (\r\n      <span>\r\n        <NumberSquareOne /> Header 1\r\n      </span>\r\n    ),\r\n    command: ({ editor, range }) => {\r\n      editor\r\n        .chain()\r\n        .focus()\r\n        .deleteRange(range)\r\n        .setNode(\"heading\", { level: 1 })\r\n        .run();\r\n    }\r\n  },\r\n  {\r\n    title: \"header 2\",\r\n    element: (\r\n      <span>\r\n        <NumberSquareTwo /> Header 2\r\n      </span>\r\n    ),\r\n    command: ({ editor, range }) => {\r\n      editor\r\n        .chain()\r\n        .focus()\r\n        .deleteRange(range)\r\n        .setNode(\"heading\", { level: 2 })\r\n        .run();\r\n    }\r\n  },\r\n  {\r\n    title: \"bold\",\r\n    element: (\r\n      <span>\r\n        <TextBolder /> Bold\r\n      </span>\r\n    ),\r\n    command: ({ editor, range }) => {\r\n      editor.chain().focus().deleteRange(range).setMark(\"bold\").run();\r\n    }\r\n  },\r\n  {\r\n    title: \"italic\",\r\n    element: (\r\n      <span>\r\n        <TextItalic /> Italic\r\n      </span>\r\n    ),\r\n    command: ({ editor, range }) => {\r\n      editor.chain().focus().deleteRange(range).setMark(\"italic\").run();\r\n    }\r\n  }\r\n];\r\n\r\nexport default baseSlashCommands;\r\n","import CommandList from \"./CommandList\";\nimport tippy from \"tippy.js\";\nimport \"tippy.js/themes/material.css\";\nimport Mention from \"@tiptap/extension-mention\";\nimport { ReactRenderer } from \"@tiptap/react\";\nimport baseSlashCommands from \"./slashCommands\";\n\nconst configureSlashCommand = (extensions) =>\n  Mention.configure({\n    suggestion: {\n      char: \"/\",\n      startOfLine: false,\n      command: ({ editor, range, props }) => {\n        props.command({ editor, range });\n      },\n      items: (query) => {\n        return [\n          ...baseSlashCommands,\n          ...extensions\n            .filter((extension) => extension.slash)\n            .map((extension) => extension.slash)\n        ]\n          .filter((item) =>\n            item.title.toLowerCase().startsWith(query.toLowerCase())\n          )\n          .slice(0, 10);\n      },\n      render: () => {\n        let reactRenderer;\n        let popup;\n        return {\n          onStart: (props) => {\n            reactRenderer = new ReactRenderer(CommandList, {\n              props,\n              editor: props.editor\n            });\n\n            popup = tippy(\"body\", {\n              getReferenceClientRect: props.clientRect,\n              appendTo: () => document.body,\n              content: reactRenderer.element,\n              showOnCreate: true,\n              interactive: true,\n              trigger: \"manual\",\n              placement: \"bottom-start\"\n            });\n          },\n          onUpdate(props) {\n            reactRenderer.updateProps(props);\n\n            popup[0].setProps({\n              getReferenceClientRect: props.clientRect\n            });\n          },\n          onKeyDown(props) {\n            return reactRenderer.ref?.onKeyDown(props);\n          },\n          onExit() {\n            if (popup && popup[0]) popup[0].destroy();\n            if (reactRenderer) reactRenderer.destroy();\n          }\n        };\n      }\n    }\n  });\n\nconst ExtensionManager = (extensions) => {\n  const SlashCommands = configureSlashCommand(extensions);\n  const plugins = extensions.map((extension) => {\n    if (extension.node) {\n      return extension.node;\n    }\n    return extension;\n  });\n  return [...plugins, SlashCommands];\n};\n\nexport default ExtensionManager;\n","import { useState, useEffect } from 'react';\r\nimport { useEditor, EditorContent } from '@tiptap/react';\r\nimport { defaultExtensions } from '@tiptap/starter-kit';\r\nimport Highlight from '@tiptap/extension-highlight';\r\nimport Typography from '@tiptap/extension-typography';\r\n\r\nimport ActionItem from './blocks/ActionItem';\r\nimport StatBlock from './blocks/StatBlock';\r\nimport DDBImport from './blocks/DDBImport.js';\r\nimport DiceNotation from './blocks/DiceNotation.js';\r\n\r\nimport './style.scss';\r\n\r\nimport ExtensionManager from './ExtensionManager';\r\nimport createPersistedState from 'use-persisted-state';\r\n\r\nconst useStarterDocState = createPersistedState('starter-doc');\r\n\r\nconst extensions = ExtensionManager([\r\n  ...defaultExtensions(),\r\n  Highlight,\r\n  Typography,\r\n  ActionItem,\r\n  StatBlock,\r\n  DDBImport,\r\n  DiceNotation,\r\n]);\r\n\r\nconst defaultState = {\r\n  type: 'doc',\r\n  content: [\r\n    {\r\n      type: 'heading',\r\n      attrs: { level: 1 },\r\n      content: [{ type: 'text', text: 'Welcome to DMpad' }],\r\n    },\r\n    {\r\n      type: 'paragraph',\r\n      content: [\r\n        { type: 'text', text: 'Try adding a block by typing ' },\r\n        { type: 'text', marks: [{ type: 'code' }], text: '/' },\r\n        { type: 'text', text: '. You can also use markdown syntax!' },\r\n      ],\r\n    },\r\n    {\r\n      type: 'actionItem',\r\n      content: [\r\n        { type: 'text', text: 'Try adding an action item with /action' },\r\n      ],\r\n    },\r\n    {\r\n      type: 'statBlock',\r\n      content: [\r\n        {\r\n          type: 'heading',\r\n          attrs: { level: 3 },\r\n          content: [{ type: 'text', text: 'Stat Block' }],\r\n        },\r\n        { type: 'paragraph' },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst Editor = () => {\r\n  const [currentContent, setCurrentContent] = useStarterDocState(defaultState);\r\n  const editor = useEditor({\r\n    extensions,\r\n    editorProps: {\r\n      attributes: {\r\n        class: 'Editor',\r\n      },\r\n    },\r\n    onUpdate() {\r\n      const json = this.getJSON();\r\n      setCurrentContent(json);\r\n    },\r\n    content: currentContent,\r\n  });\r\n\r\n  return <EditorContent editor={editor} />;\r\n};\r\n\r\nexport default Editor;\r\n","import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { generateJSON } from '@tiptap/core';\nimport { defaultExtensions } from '@tiptap/starter-kit';\n\n\nconst MONSTER_REGEX = /https:\\/\\/(www.)?dndbeyond.com\\/monsters\\/([a-zA-Z0-9-]+)/;\nconst PROXY_URL = `http://localhost:3000/proxy`;\n\nconst parseDDBLinkToProxy = (url) => {\n  if (MONSTER_REGEX.test(url)) {\n    const name = url.match(MONSTER_REGEX)[2];\n    if (!name) throw new Error('No monster name!');\n    return fetch(`${PROXY_URL}/monsters`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        cobalt:\n          'eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0..M8BeGrinvr3bE20CGIu4dQ.1OyNemWcpERC-YOouORG2CWujm44ZbG_5CJfScM72gCH6dB19giu7C8ClS_YnRr0.ZguZxNaiLdVZHoYLzOkWHA',\n        searchTerm: name,\n        exactMatch: true,\n      }),\n    });\n  }\n};\n\nconst modalRoot = document.getElementById('modal-root');\n\nconst Modal = ({ children }) => {\n  const element = document.createElement('div');\n  element.classList.add('modal');\n  useEffect(() => {\n    modalRoot.appendChild(element);\n    return () => {\n      modalRoot.removeChild(element);\n    };\n  });\n  return ReactDOM.createPortal(children, element);\n};\n\n// {\n//   \"collectionUserId\": 0,\n//   \"isReleased\": true,\n//   \"url\": \"https://www.dndbeyond.com/monsters/tiamat\",\n//   \"conditionImmunitiesHtml\": \"Blinded, Charmed, Deafened, Frightened, Poisoned, Stunned\",\n//   \"sensesHtml\": \"Darkvision 240 ft., Truesight 120 ft.\",\n//   \"skillsHtml\": \"Arcana +17, Religion +17, Perception +26\",\n//   \"stats\": [\n//     {\n//       \"statId\": 1,\n//       \"name\": null,\n//       \"value\": 30\n//     },\n//     {\n//       \"statId\": 2,\n//       \"name\": null,\n//       \"value\": 10\n//     },\n//     {\n//       \"statId\": 3,\n//       \"name\": null,\n//       \"value\": 30\n//     },\n//     {\n//       \"statId\": 4,\n//       \"name\": null,\n//       \"value\": 26\n//     },\n//     {\n//       \"statId\": 5,\n//       \"name\": null,\n//       \"value\": 26\n//     },\n//     {\n//       \"statId\": 6,\n//       \"name\": null,\n//       \"value\": 28\n//     }\n//   ],\n//   \"senses\": [\n//     {\n//       \"senseId\": 2,\n//       \"notes\": \"240 ft.\"\n//     },\n//     {\n//       \"senseId\": 4,\n//       \"notes\": \"120 ft.\"\n//     }\n//   ],\n//   \"savingThrows\": [\n//     {\n//       \"statId\": 1,\n//       \"bonusModifier\": null\n//     },\n//     {\n//       \"statId\": 2,\n//       \"bonusModifier\": null\n//     },\n//     {\n//       \"statId\": 5,\n//       \"bonusModifier\": null\n//     }\n//   ],\n//   \"skills\": [\n//     {\n//       \"skillId\": 6,\n//       \"value\": 17,\n//       \"additionalBonus\": null\n//     },\n//     {\n//       \"skillId\": 10,\n//       \"value\": 17,\n//       \"additionalBonus\": null\n//     },\n//     {\n//       \"skillId\": 14,\n//       \"value\": 26,\n//       \"additionalBonus\": null\n//     }\n//   ],\n//   \"languages\": [\n//     {\n//       \"languageId\": 1,\n//       \"notes\": \"\"\n//     },\n//     {\n//       \"languageId\": 11,\n//       \"notes\": \"\"\n//     },\n//     {\n//       \"languageId\": 13,\n//       \"notes\": \"\"\n//     }\n//   ],\n//   \"hitPointDice\": {\n//     \"diceCount\": 30,\n//     \"diceValue\": 20,\n//     \"diceMultiplier\": 0,\n//     \"fixedValue\": 300,\n//     \"diceString\": \"30d20 + 300\"\n//   },\n//   \"swarm\": null,\n//   \"movements\": [\n//     {\n//       \"movementId\": 1,\n//       \"speed\": 60,\n//       \"notes\": null\n//     },\n//     {\n//       \"movementId\": 4,\n//       \"speed\": 120,\n//       \"notes\": null\n//     }\n//   ],\n//   \"homebrewStatus\": 0,\n//   \"id\": 21927,\n//   \"entityTypeId\": 779871897,\n//   \"name\": \"Tiamat\",\n//   \"alignmentId\": 9,\n//   \"sizeId\": 7,\n//   \"typeId\": 9,\n//   \"armorClass\": 25,\n//   \"armorClassDescription\": \"(natural armor)\",\n//   \"averageHitPoints\": 615,\n//   \"passivePerception\": 36,\n//   \"isHomebrew\": false,\n//   \"challengeRatingId\": 35,\n//   \"sourceId\": 11,\n//   \"sourcePageNumber\": null,\n//   \"isLegendary\": true,\n//   \"isMythic\": false,\n//   \"hasLair\": false,\n//   \"avatarUrl\": \"https://media-waterdeep.cursecdn.com/avatars/15/531/636373689866756922.jpeg\",\n//   \"largeAvatarUrl\": \"https://media-waterdeep.cursecdn.com/avatars/thumbnails/15/532/400/404/636373689867850686.png\",\n//   \"basicAvatarUrl\": null,\n//   \"version\": null,\n//   \"subTypes\": [],\n//   \"environments\": [],\n//   \"tags\": [\n//     \"NPC\"\n//   ],\n//   \"sources\": [],\n//   \"damageAdjustments\": [\n//     20,\n//     22,\n//     23,\n//     25,\n//     27,\n//     29\n//   ],\n//   \"conditionImmunities\": [\n//     1,\n//     2,\n//     3,\n//     5,\n//     11,\n//     14\n//   ],\n//   \"reactionsDescription\": \"\",\n//   \"mythicActionsDescription\": null,\n//   \"bonusActionsDescription\": null,\n//   \"characteristicsDescription\": \"\",\n//   \"lairDescription\": \"\",\n//   \"languageDescription\": null,\n//   \"languageNote\": \"\"\n// }\n\nconst processingExtensions = [\n  ...defaultExtensions(),\n];\n\nconst processDataToBlock = (data) => {\n  return data.map((imported) => {\n    const generatedActions = generateJSON(\n      imported.actionsDescription,\n      processingExtensions,\n    ).content;\n    const generatedSpecial = generateJSON(\n      imported.specialTraitsDescription,\n      processingExtensions,\n    ).content;\n    const generatedLegendary = generateJSON(\n      imported.legendaryActionsDescription,\n      processingExtensions,\n    ).content;\n    return {\n      type: 'statBlock',\n      content: [\n        {\n          type: 'heading',\n          attrs: { level: 2 },\n          content: [{ type: 'text', text: imported.name }],\n        },\n        { type: \"horizontalRule\" },\n        generatedActions.length > 0 && {\n          type: 'heading',\n          attrs: { level: 3 },\n          content: [{ type: 'text', text: 'Actions' }],\n        },\n        ...generatedActions,\n        { type: \"horizontalRule\" },\n        generatedLegendary.length > 0 && {\n          type: 'heading',\n          attrs: { level: 3 },\n          content: [{ type: 'text', text: 'Legendary Actions' }],\n        },\n        ...generatedLegendary,\n      ].filter(Boolean),\n    };\n  });\n};\n\nconst ImportModal = () => {\n  const [importUrl, setImportUrl] = useState('');\n  const [showing, setShowing] = useState(false);\n  const rangeRef = useRef(null);\n  const importRef = useRef(null);\n  const onCreate = (e) => {\n    const { editor, range } = e.detail;\n    rangeRef.current = range;\n    setShowing(true);\n  };\n  useEffect(() => {\n    document.addEventListener('ddbImport', onCreate);\n    if (importRef.current) importRef.current.focus();\n    return () => {\n      document.removeEventListener('ddbImport', onCreate);\n    };\n  });\n  const onImport = () => {\n    if (!importUrl) {\n      return;\n    }\n    if (!(window.editor && rangeRef.current)) {\n      setShowing(false);\n      return;\n    }\n    parseDDBLinkToProxy(importUrl)\n      .then((r) => r.json())\n      .then(({ data }) => {\n        return window.editor\n          .chain()\n          .focus()\n          .insertContentAt(rangeRef.current, processDataToBlock(data))\n          .run();\n      })\n      .then(() => {\n        rangeRef.current = null;\n        setShowing(false);\n      });\n  };\n  return (\n    showing && (\n      <Modal>\n        <div className=\"ImportModal\">\n          <input\n            onChange={(e) => setImportUrl(e.target.value)}\n            ref={importRef}\n            value={importUrl}\n            placeholder=\"https://www.dndbeyond.com/...\"\n            type=\"text\"\n          />\n          <button onClick={onImport}>Import</button>\n        </div>\n      </Modal>\n    )\n  );\n};\n\nexport default ImportModal;\n","export default __webpack_public_path__ + \"static/media/logo.14afdede.svg\";","import \"./styles.scss\";\n\nimport Editor from \"./Editor\";\nimport ImportModal from \"./ImportModal\";\nimport logo from \"./logo.svg\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <div className=\"main-nav\">\n        <div className=\"inner\">\n          <div>\n            <img src={logo} alt=\"Logo\" className=\"logo\" />\n            dmpad\n          </div>\n          <nav>\n            <a href=\"https://wuz.sh\">Built by Wuz</a>\n          </nav>\n        </div>\n      </div>\n      <Editor />\n      <ImportModal />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}